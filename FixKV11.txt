#1
Идеальная передача обеспечивает один вариант кода для разных типов параметров - const &, & и &&.
Идеальная передача довольно полезна, потому что делает возможным программирование на более высоком уровне. 
Функции высшего порядка – это функции, которые могут принять другие функции в качестве аргументов или возвращать их.
Интересная реализация идеальной передачи:
template<typename T, typename... Args>
unique_ptr<T> make_unique(Args&&... args)
{
    return unique_ptr<T>(new T(std::forward<Args>(args)...));
}

#2
Универсальные ссылки — это параметры шаблонов функций.
Пробрасывающая или универсальная ссылка - T && (слева от && - тип, выбираемый
компилятором). Ещё пример - auto &&.

#3
SFINAE - распространенная идиома для возвращаемого типа, 
где выражение использует оператор запятой, левое подвыражение которого является проверяемым 
(приведено к значению void, чтобы гарантировать, что определяемая пользователем запятая оператора 
в возвращаемом типе не выбрана), а правое подвыражение имеет тип, который должна возвращать функция.